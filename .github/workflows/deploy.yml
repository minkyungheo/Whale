name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOCKERHUB_REPO: ${{ secrets.DOCKERHUB_REPO}}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    # 1. 코드 체크아웃
    - name: Checkout code
      uses: actions/checkout@v4
    
    # 2. JDK 17 설정
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    # 3. Gradle 캐싱 (빌드 속도 20-30% 향상)
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    
    # 4. Gradle Wrapper 실행 권한 부여
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    
    # 5. Gradle 빌드 (테스트 제외)
    - name: Build with Gradle
      run: ./gradlew clean bootJar -x test
    
    # 6. Docker Hub 로그인
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    # 7. Docker 이미지 빌드 및 푸시
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ env.DOCKERHUB_REPO }}:latest
          ${{ env.DOCKERHUB_REPO }}:${{ github.sha }}
